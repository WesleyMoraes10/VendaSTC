/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerProduto;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVenda;
import controller.ControllerVendaProduto;
import controller.ControllerVendasCliente;
import java.io.ByteArrayInputStream;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Date;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.JobName;
import javax.print.attribute.standard.MediaSizeName;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import jdk.jfr.events.FileWriteEvent;
import model.ModelCliente;
import model.ModelProduto;
import model.ModelProdutosVendasProdutos;
import model.ModelVenda;
import model.ModelVendaProduto;
import model.ModelVendasCliente;
import util.FormatarData;

/**
 *
 * @author Wesley
 */
public class ViewCadastroPedidoNova extends javax.swing.JFrame {

    /**
     * Estanciando Clientes
     */
    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();

    /**
     * Estanciando Produtos
     */
    ControllerProduto controllerProduto = new ControllerProduto();
    ModelProduto modelProduto = new ModelProduto();
    ArrayList<ModelProduto> listaModelProdutos = new ArrayList<>();

    /**
     * Estanciando lista de vendasCliente
     */
    ArrayList<ModelVendasCliente> listaModelVendasCliente = new ArrayList<>();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();

    /**
     * Estanciando Venda
     */
    ControllerVenda controllerVenda = new ControllerVenda();

    /**
     * Venda
     */
    ArrayList<ModelVenda> listaModelVenda = new ArrayList<>();
    ModelVenda modelVenda = new ModelVenda();

    /**
     * Formatação de data
     */
    FormatarData formatarData = new FormatarData();

    /**
     * Vendas Produtos
     */
    ControllerVendaProduto controllerVendaProduto = new ControllerVendaProduto();
    ModelVendaProduto modelVendaProduto = new ModelVendaProduto();
    ArrayList<ModelVendaProduto> listaModelVendaProdutos = new ArrayList<>();

    /**
     * ProdutosVendas Produtos
     */
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos = new ArrayList<>();

    /**
     * Variavel botão Salvar ou Alterar
     */
    String salvarAlterar;

    DefaultTableModel tmVendas = new DefaultTableModel(null, new String[]{"Id", "N.° Mesa", "Cliente"});
    ListSelectionModel lmsVendas;

    /**
     * Creates new form ViewCadastroPedidoNova
     */
    public ViewCadastroPedidoNova() {
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();
        listarClientes();
        listarProdutos();
        carregarVendas();
        jtfDesconto.setText(String.valueOf(0));
        preencherCodClientPeloComBox();
        preencherCodigoProdutoComboBox();
        inicializaBotao();
        habilitarDesabilitarCampo(false);
        jtfComanda.setText("0");
        jtfDesconto.setEnabled(false);
        jtfCodCliente.setText("1");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jtfComanda = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jtfCodCliente = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jcbCliente = new componentes.UJComboBox();
        jLabel14 = new javax.swing.JLabel();
        jtfCodProduto = new javax.swing.JFormattedTextField();
        jcbProduto = new componentes.UJComboBox();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtableProdutoVenda = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jtfQuantidade = new javax.swing.JFormattedTextField();
        btAdd = new javax.swing.JButton();
        jtfNumVenda = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        btRemover = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jtfDesconto = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jtfValorTotal = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        btNovo1 = new javax.swing.JButton();
        btCancelar1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btFinalizadaPedido1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtablePedidos = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        btExcluir1 = new javax.swing.JButton();
        btSalvaAlteracao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, null, null));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), java.awt.SystemColor.textHighlight)); // NOI18N

        jtfComanda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfComanda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfComanda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfComandaFocusLost(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Cod.Cliente:");

        jtfCodCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfCodCliente.setEnabled(false);
        jtfCodCliente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfCodCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodClienteFocusLost(evt);
            }
        });
        jtfCodCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodClienteActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Cliente:");

        jcbCliente.setAutocompletar(true);
        jcbCliente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcbCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Cod.Produto:");

        jtfCodProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfCodProduto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfCodProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodProdutoFocusLost(evt);
            }
        });

        jcbProduto.setAutocompletar(true);
        jcbProduto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcbProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Produto:");

        jtableProdutoVenda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtableProdutoVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod.Produto", "Produto", "Quant", "Valor Unit.", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtableProdutoVenda);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Quant:");

        jtfQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfQuantidade.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon16px/add-icon.png"))); // NOI18N
        btAdd.setText("Adicionar");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        jtfNumVenda.setEditable(false);
        jtfNumVenda.setBackground(new java.awt.Color(204, 255, 204));
        jtfNumVenda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfNumVenda.setForeground(new java.awt.Color(0, 153, 102));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 102));
        jLabel18.setText("N.° Venda:");

        btRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon16px/remover.png"))); // NOI18N
        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Desconto", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 0, 102))); // NOI18N

        jtfDesconto.setBackground(new java.awt.Color(204, 204, 255));
        jtfDesconto.setForeground(new java.awt.Color(51, 0, 153));
        jtfDesconto.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jtfDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescontoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Valor Total", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(204, 0, 0))); // NOI18N

        jtfValorTotal.setBackground(new java.awt.Color(255, 204, 204));
        jtfValorTotal.setForeground(new java.awt.Color(153, 0, 0));
        jtfValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jtfValorTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jtfValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfValorTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("N.° Mesa");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jtfCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jcbProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jtfCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jcbCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jtfNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfComanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdd)
                    .addComponent(jcbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRemover))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(0, 0, 102));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, null, null));

        btNovo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon32px/novo.png"))); // NOI18N
        btNovo1.setText("Novo");
        btNovo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovo1ActionPerformed(evt);
            }
        });

        btCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon32px/cancelar2.png"))); // NOI18N
        btCancelar1.setText("Cancelar");
        btCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelar1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Caixa - Gerenciamento Pedido");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Sair.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        btFinalizadaPedido1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon68px/money p.png"))); // NOI18N
        btFinalizadaPedido1.setText("Finalizar Venda");
        btFinalizadaPedido1.setToolTipText("Efetivar Venda");
        btFinalizadaPedido1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizadaPedido1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btNovo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancelar1)
                .addGap(129, 129, 129)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btFinalizadaPedido1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btCancelar1, btNovo1});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btFinalizadaPedido1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btNovo1)
                            .addComponent(btCancelar1)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btCancelar1, btFinalizadaPedido1, btNovo1});

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pedidos pedentes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), java.awt.SystemColor.textHighlight)); // NOI18N

        jtablePedidos.setModel(tmVendas);
        jtablePedidos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lmsVendas = jtablePedidos.getSelectionModel();
        lmsVendas.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (! e.getValueIsAdjusting()){
                    tblPedidoLinhaSelecionada(jtablePedidos);

                }
            }
        });
        jtablePedidos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtablePedidos.setModel(tmVendas);
        jScrollPane2.setViewportView(jtablePedidos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));

        btExcluir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/lixeira.png"))); // NOI18N
        btExcluir1.setToolTipText("Excluir Pedido");
        btExcluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluir1ActionPerformed(evt);
            }
        });

        btSalvaAlteracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/salvar.png"))); // NOI18N
        btSalvaAlteracao.setToolTipText("Efetivar Venda");
        btSalvaAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvaAlteracaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btSalvaAlteracao, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btExcluir1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btExcluir1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btSalvaAlteracao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void efetivarVenda() {
        alterarProduto();

    }

    private void alterarProduto() {

        String status = "pedido";

        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date d = new java.util.Date();
        Date data = Date.valueOf(formato.format(d));
        try {
            if (verificarCampos()) {
                modelVenda.setVen_cod(listaModelVenda.get(jtablePedidos.getSelectedRow()).getVen_cod());
                modelVenda.setVen_cod_cliente(listaModelVenda.get(jtablePedidos.getSelectedRow()).getVen_cod_cliente());
                modelVenda.setVen_data(listaModelVenda.get(jtablePedidos.getSelectedRow()).getVen_data());
                modelVenda.setVen_valor_liquido(listaModelVenda.get(jtablePedidos.getSelectedRow()).getVen_valor_liquido());
                modelVenda.setVen_valor_bruto(listaModelVenda.get(jtablePedidos.getSelectedRow()).getVen_valor_bruto());
                modelVenda.setVen_desconto(listaModelVenda.get(jtablePedidos.getSelectedRow()).getVen_desconto());
                modelVenda.setVen_comanda(listaModelVenda.get(jtablePedidos.getSelectedRow()).getVen_comanda());
                modelVenda.setVen_status("venda");
                controllerVenda.alterarVendaController(modelVenda);
                carregarVendas();

                //limpar();
                //desabilitarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Por favor selecionar um pedido!");

            }
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(null, "erro aqui no alterar");
            e.printStackTrace();
        }

    }

    public boolean verificarCampos() {
        String num = jtfNumVenda.getText();
        if (!jtfQuantidade.getText().trim().equals("")) {
            return true;
        }
        return false;
    }

    public void acaoBotao() {
        btSalvaAlteracao.setEnabled(true);
        btExcluir1.setEnabled(true);
    }

    public void liberaBotaoParaAlteracao() {
        btSalvaAlteracao.setEnabled(false);
    }

    public void inicializaBotao() {
        btSalvaAlteracao.setEnabled(false);
        btExcluir1.setEnabled(false);

    }

    public void tblPedidoLinhaSelecionada(JTable tbl) {

        if (tbl.getSelectedRow() != -1) {
            acaoBotao();
            habilitarDesabilitarCampo(true);
            int linha = jtablePedidos.getSelectedRow();
            int codigoVenda = (int) jtablePedidos.getValueAt(linha, 0);
            listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.retornaListaProdutosVendasProdutosController(codigoVenda);
            DefaultTableModel modelo = (DefaultTableModel) jtableProdutoVenda.getModel();
            modelo.setNumRows(0);

            listaModelVenda = controllerVenda.retornaListaVendasPorCodigoController(codigoVenda);
            modelo.setNumRows(0);
            int cont = listaModelVendasCliente.size();
            for (int i = 0; i < listaModelVenda.size(); i++) {
                jtfComanda.setText(String.valueOf(listaModelVenda.get(i).getVen_comanda()));
                jtfValorTotal.setText(String.valueOf(listaModelVenda.get(i).getVen_valor_liquido()));
                jtfDesconto.setText(String.valueOf(listaModelVenda.get(i).getVen_desconto()));
                jcbCliente.setSelectedItem(String.valueOf(listaModelVenda.get(i).getVen_nome_cliente()));
                jtfCodCliente.setText(String.valueOf(listaModelVenda.get(i).getVen_cod_cliente()));

            }

            for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
                jtfNumVenda.setText(String.valueOf(listaModelProdutosVendasProdutos.get(i).getModelVendaProduto().getVep_cod_venda()));
                modelo.addRow(new Object[]{
                    listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_cod(),
                    listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_nome(),
                    listaModelProdutosVendasProdutos.get(i).getModelVendaProduto().getVep_pro_quantidade(),
                    listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_valor(),
                    listaModelProdutosVendasProdutos.get(i).getModelVendaProduto().getVep_pro_quantidade()
                    * listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_valor()
                });
            }
            somarValorTotalProdutos();

        }
    }

    /**
     * Preencher combobox com os clientes
     */
    private void listarClientes() {
        listaModelClientes = controllerCliente.retornaListaClienteController();
        jcbCliente.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            jcbCliente.addItem(listaModelClientes.get(i).getCli_nome());
        }
    }

    /**
     * Preenche combox de produtos
     */
    private void listarProdutos() {
        listaModelProdutos = controllerProduto.retornaListaProdutoController();
        jcbProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            jcbProduto.addItem(listaModelProdutos.get(i).getPro_nome());
        }
    }

    /**
     * Carrega as vendas cadastradas
     */
    public void carregarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) jtablePedidos.getModel();
        listaModelVendasCliente = controllerVendasCliente.retornaListaVendasCliente();
        listaModelVenda = controllerVenda.retornartListaVendaPedidoController();

        modelo.setNumRows(0);
        int cont = listaModelVenda.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVenda.get(i).getVen_cod(),
                listaModelVenda.get(i).getVen_comanda(),
                listaModelVenda.get(i).getVen_nome_cliente()
            });
        }
       
    }

    /**
     * Soma produtos da venda
     */
    private void somarValorTotalProdutos() {
        double soma = 0, valor;
        int cont = jtableProdutoVenda.getRowCount();

        for (int i = 0; i < cont; i++) {
            valor = (double) jtableProdutoVenda.getValueAt(i, 4);
            soma = soma + valor;
        }

        DecimalFormat decimalFormat = new DecimalFormat("##.##");

        jtfValorTotal.setText(String.valueOf(decimalFormat.format(soma)));
        //jtfValorTotal.setText(String.valueOf(soma));
        //aplicarDesconto();
    }

    /**
     * Aplica desconto ao valor final de venda
     */
    private void aplicarDesconto() {
        DecimalFormat decimalFormat = new DecimalFormat("##.##");
        jtfValorTotal.setText(String.valueOf(
                Double.parseDouble(jtfValorTotal.getText()) - Double.parseDouble(jtfDesconto.getText())));
    }

    private void preencherCodigoProdutoComboBox() {
        modelProduto = controllerProduto.retornarProdutoController(jcbProduto.getSelectedItem().toString());
        jtfCodProduto.setText(String.valueOf(modelProduto.getPro_cod()));
    }

    private void preencherCodClientPeloComBox() {
        modelCliente = controllerCliente.retornaClienteController(jcbCliente.getSelectedItem().toString());
        //jtfCodCliente.setText(String.valueOf(modelCliente.getCli_cod()));
    }

    /**
     * Limpar tela de cadastro de venda
     */
    private void limparFormulario() {
        jtfComanda.setText("0");
        jtfQuantidade.setText("");
        jtfDesconto.setText(String.valueOf(0));
        jtfValorTotal.setText("");
        jtfNumVenda.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jtableProdutoVenda.getModel();
        modelo.setNumRows(0);
    }

    /**
     * Habita e Desabilita campos na tela
     *
     * @param condicao
     */
    private void habilitarDesabilitarCampo(boolean condicao) {
        jtfComanda.setEnabled(condicao);
        jcbCliente.setEnabled(condicao);
        jtfCodProduto.setEnabled(condicao);
        jcbProduto.setEnabled(condicao);
        jtfQuantidade.setEnabled(condicao);
        btAdd.setEnabled(condicao);
        btRemover.setEnabled(condicao);

    }

    private void imprimirCupom(ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos, ModelVenda modelVenda) {

        String dataF = "dd/MM/yyyy";
        String horaF = "H:mm -a";
        String data, hora;

        //pega data
        java.util.Date dataAtual = new java.util.Date();
        SimpleDateFormat formata = new SimpleDateFormat(dataF);
        data = formata.format(dataAtual);

        //pega hora
        formata = new SimpleDateFormat(horaF);
        hora = formata.format(dataAtual);

        String conteudoImpressao = "";

        for (int i = 0; i < this.listaModelVendaProdutos.size(); i++) {
            conteudoImpressao += listaModelVendaProdutos.get(i).getVep_pro_quantidade() + "     "
                    + listaModelVendaProdutos.get(i).getVep_pro_valor() + "   "
                    + listaModelVendaProdutos.get(i).getNomeProduto() + "\n\r";
        }

        this.imprimir("ESPETARIA ADEGA BEER\n\r"
                + "-------------------------------\n\r"
                + "Avenida Domingos Carmelindo Caló\n\r"
                + "N.° 2932\n\r"
                + "Vila Musa\n\r"
                + "Celular: (14)99682-3086\n\r"
                + "-------------------------------\n\r"
                + "          PEDIDOS      \n\r"
                + "Mesa: " + modelVenda.getVen_comanda() + "\n\r"
                + "-------------------------------\n\r"
                + "Quat Valor  Produto\n\r"
                + conteudoImpressao + ""
                + "-------------------------------\n\r"
                + "           Obrigado             \n\r"
                + "\n\r \n\r \f"
        );
    }

    public void imprimir(String texto) {
        try {
            //InputStream prin = new ByteArrayInputStream(texto.getBytes());
            ByteArrayInputStream prin = new ByteArrayInputStream(texto.getBytes());
            DocFlavor docFlavor = DocFlavor.INPUT_STREAM.AUTOSENSE;
            SimpleDoc documentoTexto = new SimpleDoc(prin, docFlavor, null);
            PrintService impressora = PrintServiceLookup.lookupDefaultPrintService();

            //pega impressora padrão
            PrintRequestAttributeSet printRequestAttributeSet = new HashPrintRequestAttributeSet();
            printRequestAttributeSet.add(new JobName("Impressao", null));
            printRequestAttributeSet.add(OrientationRequested.PORTRAIT);
            printRequestAttributeSet.add(MediaSizeName.ISO_A4);

            //informa tipo de folha
            DocPrintJob printJob = impressora.createPrintJob();
            

            try {
                printJob.print(documentoTexto, (PrintRequestAttributeSet) printRequestAttributeSet);                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi possivel realizar impressão!!", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            prin.close();

        } catch (Exception e) {
        }

    }

    private void jtfComandaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfComandaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfComandaFocusLost

    private void jtfCodProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodProdutoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodProdutoFocusLost

    private void jcbProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbProdutoPopupMenuWillBecomeInvisible
        if (jcbProduto.isPopupVisible()) {
            modelProduto = controllerProduto.retornarProdutoController(jcbProduto.getSelectedItem().toString());
            jtfCodProduto.setText(String.valueOf(modelProduto.getPro_cod()));
        }
    }//GEN-LAST:event_jcbProdutoPopupMenuWillBecomeInvisible

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        if (jtfQuantidade.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Favor preencher todos os campos!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            modelProduto = controllerProduto.retornarProdutoController(Integer.parseInt(jtfCodProduto.getText()));

            //Adiciona linha na tabela
            DefaultTableModel modelo = (DefaultTableModel) jtableProdutoVenda.getModel();

            int cont = 0;
            double quantidade = 0;
            quantidade = Double.parseDouble(jtfQuantidade.getText());

            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }

            modelo.addRow(new Object[]{
                modelProduto.getPro_cod(),
                modelProduto.getPro_nome(),
                jtfQuantidade.getText(),
                modelProduto.getPro_valor(),
                quantidade * modelProduto.getPro_valor(),});
            somarValorTotalProdutos();
            jtfQuantidade.setText("");
        }
    }//GEN-LAST:event_btAddActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        int linha = jtableProdutoVenda.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) jtableProdutoVenda.getModel();
        modelo.removeRow(linha);
        somarValorTotalProdutos();
    }//GEN-LAST:event_btRemoverActionPerformed

    private void jtfDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescontoFocusLost
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfDescontoFocusLost

    private void btNovo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovo1ActionPerformed
        ViewLancaPedido lancaPedido = new ViewLancaPedido();
        lancaPedido.setVisible(true);   
        
        this.dispose();
        
        /*salvarAlterar = "novo";
        btSalvar1.setEnabled(true);
        inicializaBotao();
        limparFormulario();
        habilitarDesabilitarCampo(true);

        modelCliente = controllerCliente.retornaClienteNomeConsumidorController();
        if (modelCliente.getCli_nome() == null) {
            JOptionPane.showMessageDialog(this, "Cliente 'CONSUMIDOR' não cadastrado,\n\n"
                    + "Precisa ser cadastrado por padrão do Sistema.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            jtfCodCliente.setText(String.valueOf(modelCliente.getCli_cod()));
            jcbCliente.setSelectedItem(modelCliente.getCli_nome());
        }*/


    }//GEN-LAST:event_btNovo1ActionPerformed

    private void btCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelar1ActionPerformed
        //habilitarDesabilitarCampo(false);
        inicializaBotao();
        limparFormulario();
        habilitarDesabilitarCampo(false);
    }//GEN-LAST:event_btCancelar1ActionPerformed

    private void btFinalizadaPedido1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizadaPedido1ActionPerformed
        /*
         int linha = jtablePedidos.getSelectedRow();
         int codigoVenda = (int) jtablePedidos.getValueAt(linha, 0);
         int codigoMesa = (int) jtablePedidos.getValueAt(linha, 1);

         int resposta = JOptionPane.showConfirmDialog(this, "DESEJA FINALIZAR O PEDIDO " + codigoMesa + " ? ", "Confirmação",
         JOptionPane.YES_NO_OPTION);
         if (resposta == JOptionPane.YES_OPTION) {
         modelVenda = controllerVenda.retornarVendaController(codigoVenda);
         modelVenda.setVen_status("venda");
         controllerVenda.alterarVendaController2(modelVenda);
         carregarVendas();
         inicializaBotao();
         limparFormulario();
         habilitarDesabilitarCampo(false);
         btSalvar1.setEnabled(false);

         } else if (resposta == JOptionPane.NO_OPTION) {
         inicializaBotao();
         limparFormulario();
         habilitarDesabilitarCampo(false);
         btSalvar1.setEnabled(false);
         }
         */

        ViewResumPedido viewResumPedido = new ViewResumPedido();
        viewResumPedido.setVisible(true);

        this.dispose();

    }//GEN-LAST:event_btFinalizadaPedido1ActionPerformed

    private void btExcluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluir1ActionPerformed
        int linha = jtablePedidos.getSelectedRow();
        int codigoVenda = (int) jtablePedidos.getValueAt(linha, 0);
        listaModelProdutos = new ArrayList<>();
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.retornaListaProdutosVendasProdutosController(codigoVenda);
        int cont = listaModelProdutosVendasProdutos.size();

        for (int i = 0; i < cont; i++) {
            modelProduto = new ModelProduto();
            modelProduto.setPro_cod(listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_cod());
            modelProduto.setPro_estoque(listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_estoque()
                    + listaModelProdutosVendasProdutos.get(i).getModelVendaProduto().getVep_pro_quantidade());

            listaModelProdutos.add(modelProduto);

        }

        if (controllerProduto.alterarEstoqueProdutoController(listaModelProdutos)) {
            controllerVendaProduto.excluirVendaProdutoController(codigoVenda);
            if (controllerVenda.excluirVendaController(codigoVenda)) {
                JOptionPane.showMessageDialog(this, "Venda excluida com sucesso!");
                this.carregarVendas();
                inicializaBotao();
                limparFormulario();
                habilitarDesabilitarCampo(false);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btExcluir1ActionPerformed

    private void btSalvaAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvaAlteracaoActionPerformed

        /**
         * Sera ultilizado no salvar e alterar
         */
        int codVenda = 0;
        int codProduto = 0;
        double desconto = 0;

        listaModelVendaProdutos = new ArrayList<>();

        if (jtfDesconto.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = Double.parseDouble(jtfDesconto.getText());
        }

        if (!jtfNumVenda.getText().equals("")) {
            modelVenda.setVen_cod(Integer.parseInt(jtfNumVenda.getText()));
        }
        modelVenda.setVen_cod_cliente(Integer.parseInt(jtfCodCliente.getText()));
        try {
            modelVenda.setVen_data(formatarData.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));

        } catch (Exception ex) {
            Logger.getLogger(ViewCadastroVenda.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        modelVenda.setVen_valor_liquido(Double.parseDouble(jtfValorTotal.getText().replace(",", ".")));
        modelVenda.setVen_valor_bruto(Double.parseDouble(jtfValorTotal.getText().replace(",", ".")) + Double.parseDouble(jtfDesconto.getText().replace(",", ".")));
        modelVenda.setVen_desconto(desconto);
        modelVenda.setVen_comanda(Integer.parseInt(jtfComanda.getText()));
        modelVenda.setVen_status("pedido");
        modelVenda.setVen_nome_cliente(jcbCliente.getSelectedItem().toString());

        //alterar
        int linha = jtablePedidos.getSelectedRow();
        codVenda = (int) jtablePedidos.getValueAt(linha, 0);
        listaModelProdutos = new ArrayList<>();
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.retornaListaProdutosVendasProdutosController(codVenda);
        int cont = listaModelProdutosVendasProdutos.size();

        for (int i = 0; i < cont; i++) {
            modelProduto = new ModelProduto();
            modelProduto.setPro_cod(listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_cod());
            modelProduto.setPro_estoque(listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_estoque()
                    + listaModelProdutosVendasProdutos.get(i).getModelVendaProduto().getVep_pro_quantidade());

            listaModelProdutos.add(modelProduto);

        }

        if (controllerProduto.alterarEstoqueProdutoController(listaModelProdutos)) {
            if (controllerVendaProduto.excluirVendaProdutoController(codVenda)) {
                //JOptionPane.showMessageDialog(this, "Venda excluida com sucesso!");
                this.carregarVendas();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }

        //FIM DO METODO
        if (controllerVenda.alterarVendaController(modelVenda)) {
            JOptionPane.showMessageDialog(this, "Venda alterada com sucesso", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }

        //ADICIONAR PRODUTOS NA LISTA PARA SALVAR
        //int cont = jtableProdutoVenda.getRowCount();
        for (int i = 0; i < jtableProdutoVenda.getRowCount(); i++) {
            codProduto = (int) jtableProdutoVenda.getValueAt(i, 0);
            modelVendaProduto = new ModelVendaProduto();
            modelProduto = new ModelProduto();
            modelVendaProduto.setVep_cod_produto(codProduto);
            modelVendaProduto.setVep_cod_venda(Integer.parseInt(jtfNumVenda.getText()));
            modelVendaProduto.setVep_pro_valor((double) jtableProdutoVenda.getValueAt(i, 3));
            modelVendaProduto.setVep_pro_quantidade(Integer.parseInt(jtableProdutoVenda.getValueAt(i, 2).toString()));

            //produto estoque
            modelProduto.setPro_cod(codProduto);
            modelProduto.setPro_estoque(controllerProduto.retornarProdutoController(codProduto).getPro_estoque()
                    - Integer.parseInt(jtableProdutoVenda.getValueAt(i, 2).toString()));
            listaModelVendaProdutos.add(modelVendaProduto);
            listaModelProdutos.add(modelProduto);
        }

        //salvar produtos da venda
        if (controllerVendaProduto.salvarVendaProdutoController(listaModelVendaProdutos)) {
            //JOptionPane.showMessageDialog(this, "Produtos da venda salvo com sucesso", "Atenção", JOptionPane.WARNING_MESSAGE);
            carregarVendas();
            limparFormulario();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salbvar produtos da venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btSalvaAlteracaoActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jtfValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfValorTotalActionPerformed

    private void jtfCodClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodClienteActionPerformed

    private void jtfCodClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodClienteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodClienteFocusLost

    private void jcbClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbClientePopupMenuWillBecomeInvisible
        if (jcbCliente.isPopupVisible()) {
            modelCliente = controllerCliente.retornaClienteController(jcbCliente.getSelectedItem().toString());
            jtfCodCliente.setText(String.valueOf(modelCliente.getCli_cod()));
        }
    }//GEN-LAST:event_jcbClientePopupMenuWillBecomeInvisible

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCadastroPedidoNova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCadastroPedidoNova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCadastroPedidoNova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCadastroPedidoNova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCadastroPedidoNova().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btCancelar1;
    private javax.swing.JButton btExcluir1;
    private javax.swing.JButton btFinalizadaPedido1;
    private javax.swing.JButton btNovo1;
    private javax.swing.JButton btRemover;
    private javax.swing.JButton btSalvaAlteracao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private componentes.UJComboBox jcbCliente;
    private componentes.UJComboBox jcbProduto;
    private javax.swing.JTable jtablePedidos;
    private javax.swing.JTable jtableProdutoVenda;
    private javax.swing.JFormattedTextField jtfCodCliente;
    private javax.swing.JFormattedTextField jtfCodProduto;
    private javax.swing.JFormattedTextField jtfComanda;
    private javax.swing.JFormattedTextField jtfDesconto;
    private javax.swing.JTextField jtfNumVenda;
    private javax.swing.JFormattedTextField jtfQuantidade;
    private javax.swing.JFormattedTextField jtfValorTotal;
    // End of variables declaration//GEN-END:variables
}
