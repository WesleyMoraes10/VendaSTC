/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerProduto;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVenda;
import controller.ControllerVendaProduto;
import controller.ControllerVendasCliente;
import java.awt.event.KeyEvent;
import java.io.ByteArrayInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Date;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.JobName;
import javax.print.attribute.standard.MediaSizeName;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import model.ModelCliente;
import model.ModelProduto;
import model.ModelProdutosVendasProdutos;
import model.ModelVenda;
import model.ModelVendaProduto;
import model.ModelVendasCliente;
import util.FormatarData;

/**
 *
 * @author wesleym1
 */
public class ViewLancaPedido extends javax.swing.JFrame {

    /**
     * Estanciando Clientes
     */
    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();

    /**
     * Estanciando Produtos
     */
    ControllerProduto controllerProduto = new ControllerProduto();
    ModelProduto modelProduto = new ModelProduto();
    ArrayList<ModelProduto> listaModelProdutos = new ArrayList<>();

    /**
     * Estanciando lista de vendasCliente
     */
    ArrayList<ModelVendasCliente> listaModelVendasCliente = new ArrayList<>();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();

    /**
     * Estanciando Venda
     */
    ControllerVenda controllerVenda = new ControllerVenda();

    /**
     * Venda
     */
    ArrayList<ModelVenda> listaModelVenda = new ArrayList<>();
    ModelVenda modelVenda = new ModelVenda();

    /**
     * Formatação de data
     */
    FormatarData formatarData = new FormatarData();

    /**
     * Vendas Produtos
     */
    ControllerVendaProduto controllerVendaProduto = new ControllerVendaProduto();
    ModelVendaProduto modelVendaProduto = new ModelVendaProduto();
    ArrayList<ModelVendaProduto> listaModelVendaProdutos = new ArrayList<>();

    /**
     * ProdutosVendas Produtos
     */
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos = new ArrayList<>();

    /**
     * Variavel botão Salvar ou Alterar
     */
    String salvarAlterar;

    DefaultTableModel tmVendas = new DefaultTableModel(null, new String[]{"Id", "N.° Mesa", "Cliente"});
    ListSelectionModel lmsVendas;

    ViewCadastroPedidoNova vp = new ViewCadastroPedidoNova();

    /**
     * Creates new form ViewLancaPedido
     */
    public ViewLancaPedido() {
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();        
        listarClientes();
        listarProdutos();
        preencherCodigoProdutoComboBox();
        preencherCodClientPeloComBox();
        //habilitarDesabilitarCampo(false);
        //jtfComanda.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jtfComanda = new javax.swing.JFormattedTextField();
        jtfNumVenda = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jtfCodProduto = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jcbProduto = new componentes.UJComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtableProdutoVenda = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jtfQuantidade = new javax.swing.JFormattedTextField();
        btAdd = new javax.swing.JButton();
        btRemover = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jtfCodCliente = new javax.swing.JFormattedTextField();
        jcbCliente = new componentes.UJComboBox();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jtfValorTotal = new javax.swing.JFormattedTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btSalvar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, null, null));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        jtfComanda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfComanda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfComanda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfComandaFocusLost(evt);
            }
        });
        jtfComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfComandaActionPerformed(evt);
            }
        });
        jtfComanda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfComandaKeyTyped(evt);
            }
        });

        jtfNumVenda.setEditable(false);
        jtfNumVenda.setBackground(new java.awt.Color(204, 255, 204));
        jtfNumVenda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfNumVenda.setForeground(new java.awt.Color(0, 153, 102));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 102));
        jLabel18.setText("N.° Venda:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("N.° Mesa");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Cod.Produto:");

        jtfCodProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfCodProduto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfCodProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodProdutoFocusLost(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Produto:");

        jcbProduto.setAutocompletar(true);
        jcbProduto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcbProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jtableProdutoVenda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtableProdutoVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod.Produto", "Produto", "Quant", "Valor Unit.", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtableProdutoVenda);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Quant:");

        jtfQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfQuantidade.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon16px/add-icon.png"))); // NOI18N
        btAdd.setText("Adicionar");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon16px/remover.png"))); // NOI18N
        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Cod.Cliente:");

        jtfCodCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfCodCliente.setEnabled(false);
        jtfCodCliente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfCodCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodClienteFocusLost(evt);
            }
        });
        jtfCodCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodClienteActionPerformed(evt);
            }
        });

        jcbCliente.setAutocompletar(true);
        jcbCliente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcbCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Cliente:");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Valor Total ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(204, 0, 0))); // NOI18N

        jtfValorTotal.setBackground(new java.awt.Color(255, 204, 204));
        jtfValorTotal.setForeground(new java.awt.Color(153, 0, 0));
        jtfValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jtfValorTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfValorTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jtfCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jcbProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jtfCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jcbCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE))
                        .addGap(116, 116, 116)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jtfNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfComanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAdd)
                        .addComponent(btRemover))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8.setBackground(new java.awt.Color(102, 102, 102));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, null, null));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Lançar Pedido");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Sair.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon48px/salvar.png"))); // NOI18N
        btSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSalvarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSalvar)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSalvar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public boolean verificarCampos() {
        String num = jtfNumVenda.getText();
        if (!jtfQuantidade.getText().trim().equals("")) {
            return true;
        }
        return false;
    }

    /**
     * Preenche combox de produtos
     */
    private void listarProdutos() {
        listaModelProdutos = controllerProduto.retornaListaProdutoController();
        jcbProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            jcbProduto.addItem(listaModelProdutos.get(i).getPro_nome());
        }
    }

    /**
     * Preencher combobox com os clientes
     */
    private void listarClientes() {
        listaModelClientes = controllerCliente.retornaListaClienteController();
        jcbCliente.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            jcbCliente.addItem(listaModelClientes.get(i).getCli_nome());
        }
    }

    private void preencherCodigoProdutoComboBox() {
        modelProduto = controllerProduto.retornarProdutoController(jcbProduto.getSelectedItem().toString());
        jtfCodProduto.setText(String.valueOf(modelProduto.getPro_cod()));
    }

    private void preencherCodClientPeloComBox() {
        modelCliente = controllerCliente.retornaClienteController(jcbCliente.getSelectedItem().toString());
        jtfCodCliente.setText(String.valueOf(modelCliente.getCli_cod()));
    }

    /**
     * Limpar tela de cadastro de venda
     */
    private void limparFormulario() {
        jtfComanda.setText("0");
        jtfQuantidade.setText("");
        jtfNumVenda.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jtableProdutoVenda.getModel();
        modelo.setNumRows(0);
    }

    /**
     * Habita e Desabilita campos na tela
     *
     * @param condicao
     */
    private void habilitarDesabilitarCampo(boolean condicao) {
        //jtfComanda.setEnabled(condicao);
        jcbCliente.setEnabled(condicao);
        jtfCodProduto.setEnabled(condicao);
        jcbProduto.setEnabled(condicao);
        jtfQuantidade.setEnabled(condicao);
        btAdd.setEnabled(condicao);
        btRemover.setEnabled(condicao);

    }

    private void habilitarDesabilitarCampo2(boolean condicao) {
        //jtfComanda.setEnabled(condicao);
        jcbCliente.setEnabled(condicao);
        jtfCodProduto.setEnabled(condicao);
        jcbProduto.setEnabled(condicao);
        jtfQuantidade.setEnabled(condicao);
        btAdd.setEnabled(condicao);
        btRemover.setEnabled(condicao);

    }

    private void imprimirCupom(ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos, ModelVenda modelVenda) {

        String dataF = "dd/MM/yyyy";
        String horaF = "H:mm -a";
        String data, hora;

        //pega data
        java.util.Date dataAtual = new java.util.Date();
        SimpleDateFormat formata = new SimpleDateFormat(dataF);
        data = formata.format(dataAtual);

        //pega hora
        formata = new SimpleDateFormat(horaF);
        hora = formata.format(dataAtual);

        String conteudoImpressao = "";

        for (int i = 0; i < this.listaModelVendaProdutos.size(); i++) {
            conteudoImpressao += listaModelVendaProdutos.get(i).getVep_pro_quantidade() + "     "
                    + listaModelVendaProdutos.get(i).getVep_pro_valor() + "   "
                    + listaModelVendaProdutos.get(i).getNomeProduto() + "\n\r";
        }

        this.imprimir("           MenuSoft        \n\r"
                + "-------------------------------\n\r"
                + "Sistema Gerenciamento de Restaurante\n\r"
                + "-------------------------------\n\r"
                + "          PEDIDOS      \n\r"
                + "Mesa: " + modelVenda.getVen_comanda() + "\n\r"
                + "Cliente: " + modelVenda.getVen_nome_cliente() + "\n\r"
                + "-------------------------------\n\r"
                + "Quat Valor  Produto\n\r"
                + conteudoImpressao + ""
                + "-------------------------------\n\r"
                + "           Obrigado             \n\r"
                + "\n\r \n\r \f"
        );

        

    }
    
    public void imprimir(String texto) {
        try {
            //InputStream prin = new ByteArrayInputStream(texto.getBytes());
            ByteArrayInputStream prin = new ByteArrayInputStream(texto.getBytes());
            DocFlavor docFlavor = DocFlavor.INPUT_STREAM.AUTOSENSE;
            SimpleDoc documentoTexto = new SimpleDoc(prin, docFlavor, null);
            PrintService impressora = PrintServiceLookup.lookupDefaultPrintService();

            //pega impressora padrão
            PrintRequestAttributeSet printRequestAttributeSet = new HashPrintRequestAttributeSet();
            printRequestAttributeSet.add(new JobName("Impressao", null));
            printRequestAttributeSet.add(OrientationRequested.PORTRAIT);
            printRequestAttributeSet.add(MediaSizeName.ISO_A4);

            //informa tipo de folha
            DocPrintJob printJob = impressora.createPrintJob();
            
            

            try {
                printJob.print(documentoTexto, (PrintRequestAttributeSet) printRequestAttributeSet);
                 
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi possivel realizar impressão!!", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            prin.close();

        } catch (Exception e) {
        }
        
       
    }
    
   

    /**
     * Soma produtos da venda
     */
    private void somarValorTotalProdutos() {
        double soma = 0, valor;
        int cont = jtableProdutoVenda.getRowCount();
        double total = 0;

        for (int i = 0; i < cont; i++) {
            valor = (double) jtableProdutoVenda.getValueAt(i, 4);
            soma = soma + valor;
        }

        DecimalFormat decimalFormat = new DecimalFormat("##.##");

        jtfValorTotal.setText(String.valueOf(decimalFormat.format(soma)));
        //jtfValorTotal.setText(String.valueOf(soma));
        //aplicarDesconto();
    }


    private void jtfComandaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfComandaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfComandaFocusLost

    private void jtfCodProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodProdutoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodProdutoFocusLost

    private void jcbProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbProdutoPopupMenuWillBecomeInvisible
        if (jcbProduto.isPopupVisible()) {
            modelProduto = controllerProduto.retornarProdutoController(jcbProduto.getSelectedItem().toString());
            jtfCodProduto.setText(String.valueOf(modelProduto.getPro_cod()));
        }
    }//GEN-LAST:event_jcbProdutoPopupMenuWillBecomeInvisible

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        ViewCadastroPedidoNova cadastroPedidoNova = new ViewCadastroPedidoNova();
        cadastroPedidoNova.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSalvarMouseClicked
        ModelVenda numVenda = controllerVenda.retornarVendaNumeroVendaController(jtfComanda.getText().toString());

        if (numVenda.getVen_cod() == 0) {
            int codVenda = 0;
            int codProduto = 0;
            double desconto = 0;
            listaModelVendaProdutos = new ArrayList<>();

            modelVenda.setVen_cod_cliente(Integer.parseInt(jtfCodCliente.getText()));
            try {
                modelVenda.setVen_data(formatarData.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));

            } catch (Exception ex) {
                Logger.getLogger(ViewCadastroVenda.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

            modelVenda.setVen_valor_liquido(Double.parseDouble(jtfValorTotal.getText().replace(",", ".")));
            modelVenda.setVen_valor_bruto(Double.parseDouble(jtfValorTotal.getText().replace(",", ".")));
            modelVenda.setVen_desconto(desconto);
            modelVenda.setVen_comanda(Integer.parseInt(jtfComanda.getText()));
            modelVenda.setVen_status("pedido");
            modelVenda.setVen_nome_cliente(jcbCliente.getSelectedItem().toString());

            //Salvar venda TBLVENDA
            codVenda = controllerVenda.salvarVendaController(modelVenda);
            if (codVenda > 0) {
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

            int cont = jtableProdutoVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codProduto = (int) jtableProdutoVenda.getValueAt(i, 0);
                modelVendaProduto = new ModelVendaProduto();
                modelProduto = new ModelProduto();
                modelVendaProduto.setVep_cod_produto(codProduto);
                modelVendaProduto.setVep_cod_venda(codVenda);
                modelVendaProduto.setVep_pro_valor((double) jtableProdutoVenda.getValueAt(i, 3));
                modelVendaProduto.setNomeProduto(jtableProdutoVenda.getValueAt(i, 1).toString());
                modelVendaProduto.setVep_pro_quantidade(Integer.parseInt(jtableProdutoVenda.getValueAt(i, 2).toString()));

                //produto estoque
                modelProduto.setPro_cod(codProduto);
                modelProduto.setPro_estoque(controllerProduto.retornarProdutoController(codProduto).getPro_estoque()
                        - Integer.parseInt(jtableProdutoVenda.getValueAt(i, 2).toString()));
                listaModelVendaProdutos.add(modelVendaProduto);
                listaModelProdutos.add(modelProduto);

            }
            //Salvar os produtos da venda TBLVENDA_PRODUTO
            if (controllerVendaProduto.salvarVendaProdutoController(listaModelVendaProdutos)) {
                //Alterar estoque de produtos
                controllerProduto.alterarEstoqueProdutoController(listaModelProdutos);

                JOptionPane.showMessageDialog(this, "Lançamento realizada com sucesso!", "ATENÇÃO", JOptionPane.INFORMATION_MESSAGE);

                int resposta = JOptionPane.showConfirmDialog(this, "Deseja imprimir pedido ?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    imprimirCupom(listaModelProdutosVendasProdutos, modelVenda);
                }
                limparFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

        } else {//ALTERAÇÃO/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            habilitarDesabilitarCampo(true);
            jtfNumVenda.setText(String.valueOf(numVenda.getVen_cod()));

            /**
             * Sera ultilizado no salvar e alterar
             */
            int codVenda = 0;
            int codProduto = 0;
            double desconto = 0;

            listaModelVendaProdutos = new ArrayList<>();

            if (!jtfNumVenda.getText().equals("")) {
                modelVenda.setVen_cod(Integer.parseInt(jtfNumVenda.getText()));
            }
            modelVenda.setVen_cod_cliente(Integer.parseInt(jtfCodCliente.getText()));
            try {
                modelVenda.setVen_data(formatarData.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));

            } catch (Exception ex) {
                Logger.getLogger(ViewCadastroVenda.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

            ModelVenda modelVendaResultado = controllerVenda.retornarVendaNumeroVendaController(jtfComanda.getText().toString());

            modelVenda.setVen_valor_liquido(Double.parseDouble(jtfValorTotal.getText().replace(",", ".")) + modelVendaResultado.getVen_valor_liquido());
            modelVenda.setVen_valor_bruto(Double.parseDouble(jtfValorTotal.getText().replace(",", ".")) + modelVendaResultado.getVen_valor_liquido());
            modelVenda.setVen_desconto(desconto);
            modelVenda.setVen_comanda(Integer.parseInt(jtfComanda.getText()));
            modelVenda.setVen_status("pedido");
            modelVenda.setVen_nome_cliente(jcbCliente.getSelectedItem().toString());

            //alterar
            //int linha = jtablePedidos.getSelectedRow();
            //codVenda = (int) jtablePedidos.getValueAt(linha, 0);
            codVenda = Integer.parseInt(jtfNumVenda.getText());
            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.retornaListaProdutosVendasProdutosController(codVenda);
            int cont = listaModelProdutosVendasProdutos.size();

            for (int i = 0; i < cont; i++) {
                modelProduto = new ModelProduto();
                modelProduto.setPro_cod(listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_cod());
                modelProduto.setPro_estoque(listaModelProdutosVendasProdutos.get(i).getModelProduto().getPro_estoque()
                        + listaModelProdutosVendasProdutos.get(i).getModelVendaProduto().getVep_pro_quantidade());

                listaModelProdutos.add(modelProduto);

            }

            //FIM DO METODO
            if (controllerVenda.alterarVendaController(modelVenda)) {
                JOptionPane.showMessageDialog(this, "Lançamento alterada com sucesso", "Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao alterar venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

            //ADICIONAR PRODUTOS NA LISTA PARA SALVAR
            //int cont = jtableProdutoVenda.getRowCount();
            for (int i = 0; i < jtableProdutoVenda.getRowCount(); i++) {
                codProduto = (int) jtableProdutoVenda.getValueAt(i, 0);
                modelVendaProduto = new ModelVendaProduto();
                modelProduto = new ModelProduto();
                modelVendaProduto.setVep_cod_produto(codProduto);
                modelVendaProduto.setVep_cod_venda(Integer.parseInt(jtfNumVenda.getText()));
                modelVendaProduto.setVep_pro_valor((double) jtableProdutoVenda.getValueAt(i, 3));
                modelVendaProduto.setVep_pro_quantidade(Integer.parseInt(jtableProdutoVenda.getValueAt(i, 2).toString()));
                modelVendaProduto.setNomeProduto(jtableProdutoVenda.getValueAt(i, 1).toString());

                //produto estoque
                modelProduto.setPro_cod(codProduto);
                modelProduto.setPro_estoque(controllerProduto.retornarProdutoController(codProduto).getPro_estoque()
                        - Integer.parseInt(jtableProdutoVenda.getValueAt(i, 2).toString()));
                listaModelVendaProdutos.add(modelVendaProduto);
                listaModelProdutos.add(modelProduto);
            }

            //salvar produtos da venda 
            if (controllerVendaProduto.salvarVendaProdutoController(listaModelVendaProdutos)) {
                //JOptionPane.showMessageDialog(this, "Produtos da venda salvo com sucesso", "Atenção", JOptionPane.WARNING_MESSAGE);
                //carregarVendas();
                controllerProduto.alterarEstoqueProdutoController(listaModelProdutos);

                int resposta = JOptionPane.showConfirmDialog(this, "Deseja imprimir pedido ?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    imprimirCupom(listaModelProdutosVendasProdutos, modelVenda);
                }

                limparFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar produtos da venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

        }
        ViewCadastroPedidoNova cadastroPedidoNova = new ViewCadastroPedidoNova();
        cadastroPedidoNova.setVisible(true);
        this.dispose();


    }//GEN-LAST:event_btSalvarMouseClicked

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        if (jtfQuantidade.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Favor preencher todos os campos!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            modelProduto = controllerProduto.retornarProdutoController(Integer.parseInt(jtfCodProduto.getText()));

            //Adiciona linha na tabela
            DefaultTableModel modelo = (DefaultTableModel) jtableProdutoVenda.getModel();

            int cont = 0;
            double quantidade = 0;
            quantidade = Double.parseDouble(jtfQuantidade.getText());

            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }

            modelo.addRow(new Object[]{
                modelProduto.getPro_cod(),
                modelProduto.getPro_nome(),
                jtfQuantidade.getText(),
                modelProduto.getPro_valor(),
                quantidade * modelProduto.getPro_valor(),});

            somarValorTotalProdutos();

            jtfQuantidade.setText("");
        }
    }//GEN-LAST:event_btAddActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        int linha = jtableProdutoVenda.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) jtableProdutoVenda.getModel();
        modelo.removeRow(linha);
        //somarValorTotalProdutos();
    }//GEN-LAST:event_btRemoverActionPerformed

    private void jtfComandaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfComandaKeyTyped
        char enter = evt.getKeyChar();
        if (enter == KeyEvent.VK_ENTER) {

            ModelVenda modelVenda = controllerVenda.retornarVendaNumeroVendaController(jtfComanda.getText().toString());
            DefaultTableModel modelo = (DefaultTableModel) jtableProdutoVenda.getModel();
            modelo.setNumRows(0);
            jtfValorTotal.setText("0.0");
            String mesa = jtfComanda.getText();

            if (modelVenda.getVen_cod() == 0) {
                JOptionPane.showMessageDialog(this, "Mesa " + mesa + " não existe, será criado uma nova!.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                habilitarDesabilitarCampo(true);

            } else {
                JOptionPane.showMessageDialog(this, "Mesa " + mesa + " já existe... \n\n\rDeseja lançar mesmo assim?", "Atenção", JOptionPane.WARNING_MESSAGE);
                if (modelVenda.getVen_comanda() == 0) {
                    jcbCliente.setEnabled(true);
                    jtfNumVenda.setText(String.valueOf(modelVenda.getVen_cod()));
                    jcbCliente.setSelectedItem(String.valueOf(modelVenda.getVen_nome_cliente()));
                    //jtfValorTotal.setText(String.valueOf(modelVenda.getVen_valor_liquido()));
                    preencherCodClientPeloComBox();
                    jtfValorTotal.setText("0.0");
                } else {
                    jtfNumVenda.setText(String.valueOf(modelVenda.getVen_cod()));
                    jcbCliente.setSelectedItem(String.valueOf(modelVenda.getVen_nome_cliente()));
                    //jtfValorTotal.setText(String.valueOf(modelVenda.getVen_valor_liquido()));
                    preencherCodClientPeloComBox();
                    habilitarDesabilitarCampo2(false);
                    jtfValorTotal.setText("0.0");
                }
            }

        }

    }//GEN-LAST:event_jtfComandaKeyTyped

    private void jtfComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfComandaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfComandaActionPerformed

    private void jtfCodClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodClienteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodClienteFocusLost

    private void jtfCodClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodClienteActionPerformed

    private void jcbClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbClientePopupMenuWillBecomeInvisible
        if (jcbCliente.isPopupVisible()) {
            modelCliente = controllerCliente.retornaClienteController(jcbCliente.getSelectedItem().toString());
            jtfCodCliente.setText(String.valueOf(modelCliente.getCli_cod()));
        }
    }//GEN-LAST:event_jcbClientePopupMenuWillBecomeInvisible

    private void jtfValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfValorTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewLancaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewLancaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewLancaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewLancaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewLancaPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btRemover;
    private javax.swing.JLabel btSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private componentes.UJComboBox jcbCliente;
    private componentes.UJComboBox jcbProduto;
    private javax.swing.JTable jtableProdutoVenda;
    private javax.swing.JFormattedTextField jtfCodCliente;
    private javax.swing.JFormattedTextField jtfCodProduto;
    private javax.swing.JFormattedTextField jtfComanda;
    private javax.swing.JTextField jtfNumVenda;
    private javax.swing.JFormattedTextField jtfQuantidade;
    private javax.swing.JFormattedTextField jtfValorTotal;
    // End of variables declaration//GEN-END:variables
}
